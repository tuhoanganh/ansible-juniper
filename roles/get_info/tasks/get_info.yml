---
- name: Verifying NETCONF - [Step 01]
  wait_for: 
    host: "{{ ansible_host }}"
    port: 830

- name: Get Date - [Step 02]
  set_fact: date_info="{{lookup('pipe','date +%Y%m%d')}}"

- name: Create Date directory - [Step 03]
  file: 
    path: "files/getinfo/{{ date_info }}"
    state: directory
    mode: 0777

- name: Set Path
  set_fact:
    default_path: "files/getinfo"

- name: Create Log file
  file:
    path: "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.txt"
    state: touch
    mode: "u=rw,g=rw,o=rw"

- name: Show Chassis hardware - [Step 02-1]
  junos_cli:
    host: "{{ ansible_host }}"
    user: "{{ juniper_user }}"
    passwd: "{{ juniper_passwd }}"
    cli: "show chassis hardware"
    dest: "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.tmp"
    format: text

- name: Retrive information - [Step 02-2]
  shell: cat "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.tmp" | grep -v -e "^$"
  register: get_info

- name: Write information to file - [Step 02-3]
  lineinfile:
    path: "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.txt"
    line: "{{ item }}"
  with_items:
    - "====Show Chassis Hardware==="
    - "{{ get_info.stdout }}"

- name: Show Chassis fpc pic-status - [Step 03-1]
  junos_cli:
    host: "{{ ansible_host }}"
    user: "{{ juniper_user }}"
    passwd: "{{ juniper_passwd }}"
    cli: "show chassis fpc pic-status"
    dest: "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.tmp"
    format: text
  register: router_info

- name: Retrive information - [Step 03-2]
  shell: cat "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.tmp" | grep -v -e '^$'
  register: get_info

- name: Write information to file - [Step 03-3]
  lineinfile:
    path: "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.txt"
    line: "{{ item }}"
  with_items:
    - "====Show Chassis fpc pic-status==="
    - "{{ get_info.stdout }}"

- name: Show Chassis environment - [Step 04-1]
  junos_cli:
    host: "{{ ansible_host }}"
    user: "{{ juniper_user }}"
    passwd: "{{ juniper_passwd }}"
    cli: "show chassis environment"
    dest: "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.tmp"
    format: text
  register: router_info

- name: Retrive information - [Step 04-2]
  shell: cat "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.tmp" | grep -v -e '^$'
  register: get_info

- name: Write information to file - [Step 04-3]
  lineinfile:
    path: "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.txt"
    line: "{{ item }}"
  with_items:
    - "====Show Chassis environment==="
    - "{{ get_info.stdout }}"

#- name: Show interfaces diagnostics optics - [Step 05-1]
#  junos_cli:
#    host: "{{ ansible_host }}"
#    user: "{{ juniper_user }}"
#    passwd: "{{ juniper_passwd }}"
#    cli: "show interfaces diagnostics optics *"
#    dest: "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.tmp"
#    format: text
#  register: router_info

#- name: Retrive information - [Step 05-2]
#  shell: cat "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.tmp" | grep -v -e '^$'
#  register: get_info

#- name: Write information to file - [Step 05-3]
#  lineinfile:
#    path: "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.txt"
#    line: "{{ item }}"
#  with_items:
#    - "====Show interfaces diagnostics optics==="
#    - "{{ get_info.stdout }}"

- name: Clear Temp file
  file:
    state: absent
    path: "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.tmp"

#- name: Clear Expire Report (Older than 2 week)
#  shell: "find {{ default_path }}/* -mtime +14"
