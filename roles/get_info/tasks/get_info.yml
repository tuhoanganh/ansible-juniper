---
- name: Verifying NETCONF - [Step 01]
  wait_for: 
    host: "{{ ansible_host }}"
    port: 830

- name: Create Log file
  file:
    path: "files/getinfo/{{ inventory_hostname }}.txt"
    state: touch
    mode: "u=rw,g=rw,o=rw"

- name: Show Chassis hardware - [Step 02-1]
  junos_cli:
    host: "{{ ansible_host }}"
    user: "{{ juniper_user }}"
    passwd: "{{ juniper_passwd }}"
    cli: "show chassis hardware"
    dest: "files/getinfo/{{ inventory_hostname }}.tmp"
    format: text

- name: Retrive information - [Step 02-2]
  shell: cat "files/getinfo/{{ inventory_hostname }}.tmp" | grep -v -e "^$"
  register: get_info

- name: Write information to file - [Step 02-3]
  lineinfile:
    path: "files/getinfo/{{ inventory_hostname }}.txt"
    line: "{{ item }}"
  with_items:
    - "====Show Chassis Hardware==="
    - "{{ get_info.stdout }}"

- name: Show Chassis fpc pic-status - [Step 03-1]
  junos_cli:
    host: "{{ ansible_host }}"
    user: "{{ juniper_user }}"
    passwd: "{{ juniper_passwd }}"
    cli: "show chassis fpc pic-status"
    dest: "files/getinfo/{{ inventory_hostname }}.tmp"
    format: text
  register: router_info

- name: Retrive information - [Step 03-2]
  shell: cat "files/getinfo/{{ inventory_hostname }}.tmp" | grep -v -e '^$'
  register: get_info

- name: Write information to file - [Step 03-3]
  lineinfile:
    path: "files/getinfo/{{ inventory_hostname }}.txt"
    line: "{{ item }}"
  with_items:
    - "====Show Chassis fpc pic-status==="
    - "{{ get_info.stdout }}"

- name: Show Chassis environment - [Step 04-1]
  junos_cli:
    host: "{{ ansible_host }}"
    user: "{{ juniper_user }}"
    passwd: "{{ juniper_passwd }}"
    cli: "show chassis environment"
    dest: "files/getinfo/{{ inventory_hostname }}.tmp"
    format: text
  register: router_info

- name: Retrive information - [Step 04-2]
  shell: cat "files/getinfo/{{ inventory_hostname }}.tmp" | grep -v -e '^$'
  register: get_info

- name: Write information to file - [Step 04-3]
  lineinfile:
    path: "files/getinfo/{{ inventory_hostname }}.txt"
    line: "{{ item }}"
  with_items:
    - "====Show Chassis environment==="
    - "{{ get_info.stdout }}"

- name: Show interfaces diagnostics optics - [Step 05-1]
  junos_cli:
    host: "{{ ansible_host }}"
    user: "{{ juniper_user }}"
    passwd: "{{ juniper_passwd }}"
    cli: "show interfaces diagnostics optics *"
    dest: "files/getinfo/{{ inventory_hostname }}.tmp"
    format: text
  register: router_info

- name: Retrive information - [Step 05-2]
  shell: cat "files/getinfo/{{ inventory_hostname }}.tmp" | grep -v -e '^$'
  register: get_info

- name: Write information to file - [Step 05-3]
  lineinfile:
    path: "files/getinfo/{{ inventory_hostname }}.txt"
    line: "{{ item }}"
  with_items:
    - "====Show interfaces diagnostics optics==="
    - "{{ get_info.stdout }}"

- name: Clean Temp file
  file:
    state: absent
    path: "files/getinfo/{{ inventory_hostname }}.tmp"
