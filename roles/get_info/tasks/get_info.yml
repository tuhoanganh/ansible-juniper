---
- name: INFORMATION - [Step 01] - Verifying NETCONF
  wait_for: 
    host: "{{ ansible_host }}"
    port: 830
    timeout: 5
    
- name: INFORMATION - [Step 02] - Get Date
  set_fact: date_info="{{lookup('pipe','date +%Y%m%d')}}"

- name: INFORMATION - [Step 03] - Create Date directory
  file: 
    path: "files/getinfo/{{ date_info }}"
    state: directory
    mode: 0777

- name: INFORMATION - [Step 04] - Create FPC directory
  file:
    path: "files/getinfo/{{ date_info }}/items"
    state: directory
    mode: 0777

- name: INFORMATION - [Step 05] - Set directory for storing the log files
  set_fact:
    default_path: "files/getinfo"

- name: INFORMATION - [Step 06] - Create Log file
  file:
    path: "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.txt"
    state: touch
    mode: "u=rw,g=rw,o=rw"

- name: INFORMATION - [Step 07] - Create Item's log file
  file:
    path: "{{ default_path }}/{{ date_info }}/items/{{ inventory_hostname }}.txt"
    state: touch
    mode: "u=rw,g=rw,o=rw"

- name: INFORMATION - [Step 08] - Show Chassis hardware
  junos_cli:
    host: "{{ ansible_host }}"
    user: "{{ juniper_user }}"
    passwd: "{{ juniper_passwd }}"
    cli: "show chassis hardware"
    dest: "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.tmp"
    format: text

- name: INFORMATION - [Step 09] - Retrive information
  shell: cat "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.tmp" | grep -v -e "^$"
  register: get_info

- name: INFORMATION - [Step 10] - Retrive information
  shell: cat "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.tmp" | grep "FPC\|Xcvr\|PIC"
  register: get_item_info

- name: INFORMATION - [Step 11] - Write information to file
  lineinfile:
    path: "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.txt"
    line: "{{ item }}"
  with_items:
    - "{{ inventory_hostname }} - {{ ansible_host }}" 
    - "====Show Chassis Hardware==="
    - "{{ get_info.stdout }}"

- name: INFORMATION - [Step 12] - Write information to file
  lineinfile: 
    path: "{{ default_path }}/{{ date_info }}/items/{{ inventory_hostname }}.txt"
    line: "{{ item }}"
  with_items:
    - "{{ inventory_hostname }} - {{ ansible_host }}"
    - "====Show Chassis Hardware==="
    - "{{ get_item_info.stdout }}"

- name: INFORMATION - [Step 13] - Show Chassis fpc pic-status
  junos_cli:
    host: "{{ ansible_host }}"
    user: "{{ juniper_user }}"
    passwd: "{{ juniper_passwd }}"
    cli: "show chassis fpc pic-status"
    dest: "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.tmp"
    format: text
  register: router_info

- name: INFORMATION - [Step 14] - Retrive information
  shell: cat "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.tmp" | grep -v -e '^$'
  register: get_info

- name: INFORMATION - [Step 15] - Write information to file
  lineinfile:
    path: "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.txt"
    line: "{{ item }}"
  with_items:
    - "====Show Chassis fpc pic-status==="
    - "{{ get_info.stdout }}"

- name: INFORMATION - [Step 16] - Show Chassis environment
  junos_cli:
    host: "{{ ansible_host }}"
    user: "{{ juniper_user }}"
    passwd: "{{ juniper_passwd }}"
    cli: "show chassis environment"
    dest: "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.tmp"
    format: text
  register: router_info

- name: INFORMATION - [Step 17] - Retrive information
  shell: cat "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.tmp" | grep -v -e '^$'
  register: get_info

- name: INFORMATION - [Step 18] - Write information to file
  lineinfile:
    path: "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.txt"
    line: "{{ item }}"
  with_items:
    - "====Show Chassis environment==="
    - "{{ get_info.stdout }}"

#- name: Show interfaces diagnostics optics - INFORMATION - [Step 05-1]
#  junos_cli:
#    host: "{{ ansible_host }}"
#    user: "{{ juniper_user }}"
#    passwd: "{{ juniper_passwd }}"
#    cli: "show interfaces diagnostics optics *"
#    dest: "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.tmp"
#    format: text
#  register: router_info

#- name: Retrive information - INFORMATION - [Step 05-2]
#  shell: cat "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.tmp" | grep -v -e '^$'
#  register: get_info

#- name: Write information to file - INFORMATION - [Step 05-3]
#  lineinfile:
#    path: "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.txt"
#    line: "{{ item }}"
#  with_items:
#    - "====Show interfaces diagnostics optics==="
#    - "{{ get_info.stdout }}"

- name: INFORMATION - [Step 19] - Clear Temp file
  file:
    state: absent
    path: "{{ item }}"
  with_items:
    - "{{ default_path }}/{{ date_info }}/{{ inventory_hostname }}.tmp"
    - "{{ default_path }}/{{ date_info }}/items/{{ inventory_hostname }}.tmp"

#- name: Clear Expire Report (Older than 2 week)
#  shell: "find {{ default_path }}/* -mtime +14"
